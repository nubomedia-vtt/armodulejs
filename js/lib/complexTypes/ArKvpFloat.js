/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2015 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials are made
 * available under the terms of the GNU Lesser General Public License (LGPL)
 * version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

var inherits = require('inherits');

var kurentoClient = require('kurento-client');

var checkType = kurentoClient.checkType;
var ChecktypeError = checkType.ChecktypeError;

var ComplexType = kurentoClient.register.complexTypes.ComplexType;


/**
 * AR Key-Value-Pair of Strings and floats for passing data
 *
 * @constructor module:armarkerdetector/complexTypes.ArKvpFloat
 *
 * @property {external:String} key
 *  unique key for a value
 * @property {external:Number} value
 *  arbitrary value
 */
function ArKvpFloat(arKvpFloatDict){
  if(!(this instanceof ArKvpFloat))
    return new ArKvpFloat(arKvpFloatDict)

  arKvpFloatDict = arKvpFloatDict || {}

  // Check arKvpFloatDict has the required fields
  checkType('String', 'arKvpFloatDict.key', arKvpFloatDict.key, {required: true});
  checkType('float', 'arKvpFloatDict.value', arKvpFloatDict.value, {required: true});

  // Init parent class
  ArKvpFloat.super_.call(this, arKvpFloatDict)

  // Set object properties
  Object.defineProperties(this, {
    key: {
      writable: true,
      enumerable: true,
      value: arKvpFloatDict.key
    },
    value: {
      writable: true,
      enumerable: true,
      value: arKvpFloatDict.value
    }
  })
}
inherits(ArKvpFloat, ComplexType)

// Private identifiers to allow re-construction of the complexType on the server
// They need to be enumerable so JSON.stringify() can access to them
Object.defineProperties(ArKvpFloat.prototype, {
  __module__: {
    enumerable: true,
    value: "armarkerdetector"
  },
  __type__: {
    enumerable: true,
    value: "ArKvpFloat"
  }
})

/**
 * Checker for {@link module:armarkerdetector/complexTypes.ArKvpFloat}
 *
 * @memberof module:armarkerdetector/complexTypes
 *
 * @param {external:String} key
 * @param {module:armarkerdetector/complexTypes.ArKvpFloat} value
 */
function checkArKvpFloat(key, value)
{
  if(!(value instanceof ArKvpFloat))
    throw ChecktypeError(key, ArKvpFloat, value);
};


module.exports = ArKvpFloat;

ArKvpFloat.check = checkArKvpFloat;
